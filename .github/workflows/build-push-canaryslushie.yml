name: Build and Publish CanarySlushie Containers
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: canaryslushie-web

on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  build-web:
    name: Build CanarySlushie Web Container
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      REGISTRY: ghcr.io
      WEB_IMAGE_NAME: canaryslushie-web

    steps:
      - name: Check out Repo
        uses: actions/checkout@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tag, labels) for Docker
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: ${{ env.REGISTRY }}/${{ env.WEB_IMAGE_NAME }}

      - name: Build and push CanarySlushie Web
        uses: docker/build-push-action@16ebe778df0e7752d2cfcbd924afdbbd89c1a755
        with:
          context: ./
          push: true
          tags: ghcr.io/${{github.repository_owner}}/canaryslushie-web:1.0.0
          labels: ${{ steps.meta.outputs.labels }}
          file: ./CanarySlushie.Web/Dockerfile
  deploy-container:
    name: Deploy CanarySlushie Web Container
    needs: build-web
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Execute ssh commands to pull down repo and run docker compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{secrets.HOSTNAME}}
          username: ${{secrets.DEPLOY_USER}}
          key: ${{secrets.DEPLOY_SSH_KEY}}
          script: |
            rm -rf canary-slushie
            gh auth login --with-token ${{secrets.GITHUB_TOKEN}}
            gh repo clone koishibuh/canary-slushie
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login --username ${{ github.actor }} --password-stdin ghcr.io
            cd canary-slushie
            cp docker-compose.yml /etc/docker-env && cd /etc/docker-env
            docker compose down
            docker compose pull
            docker compose up -d
            rm -rf docker-compose.yml